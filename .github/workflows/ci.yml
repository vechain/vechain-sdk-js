name: CI-V3

permissions:
  contents: read

on:
  push:
    branches:
      - sdk-v3 #will be main in the future
  pull_request:
    branches:
      - sdk-v3
      
    

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: yarn

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Cache Turborepo cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

  tests_unit:
    name: Tests • Unit (Node)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: yarn

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Unit tests
        run: yarn test:unit

      - name: Archive coverage (unit)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit
          path: |
            packages/**/coverage*/lcov.info

  tests_integration:
    name: Tests • Integration (Thor Solo)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: yarn

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Preliminary Stop of Thor solo node
        run: yarn stop-thor-solo || true

      - name: Start & Seed Thor solo node
        run: |
          yarn start-thor-solo
          yarn seed-thor-solo

      - name: Integration tests (solo only)
        run: yarn test:solo:only

      - name: Stop Thor solo node
        if: always()
        run: yarn stop-thor-solo || true

      - name: Archive coverage (integration)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-integration
          path: |
            packages/**/coverageSolo/lcov.info

  tests_clients:
    name: Tests • Clients (Thor Solo)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: yarn

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Preliminary Stop of Thor solo node
        run: yarn stop-thor-solo || true

      - name: Start & Seed Thor solo node
        run: |
          yarn start-thor-solo
          yarn seed-thor-solo

      - name: Clients tests
        run: yarn test:clients

      - name: Stop Thor solo node
        if: always()
        run: yarn stop-thor-solo || true

      - name: Archive coverage (clients)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-clients
          path: |
            packages/**/coverageClients/lcov.info

  tests_browser:
    name: Tests • Browser
    runs-on: ubuntu-latest
    timeout-minutes: 25
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Preliminary Stop of Thor solo node
        run: yarn stop-thor-solo || true

      - name: Start & Seed Thor solo node
        run: |
          yarn start-thor-solo
          yarn seed-thor-solo

      - name: Browser tests
        run: yarn test:browser

      - name: Stop Thor solo node
        if: always()
        run: yarn stop-thor-solo || true

      - name: Archive coverage (browser)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-browser
          path: |
            packages/**/coverage/lcov.info

  tag_build:
    name: Build Number Tagging
    runs-on: ubuntu-latest
    needs: [tests_unit, tests_integration, tests_clients, tests_browser]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create and push build tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          TAG="build-${GITHUB_RUN_NUMBER}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists, skipping"; exit 0;
          fi
          git tag -a "$TAG" -m "CI build $TAG"
          git push origin "$TAG"

            }
      - name: Post success to Slack
        if: success()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: webhook-trigger
          payload: |
            {
              "source": "GitHub",
              "repo": "${{ github.repository }}",
              "branch": "${{ github.head_ref || github.ref_name }}",
              "message": "CI-V3 passed: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }

  sonar:
    name: SonarCloud
    needs: [tests_unit, tests_integration, tests_clients, tests_browser]
    if: always()
    uses: ./.github/workflows/sonar.yml
    secrets: inherit


