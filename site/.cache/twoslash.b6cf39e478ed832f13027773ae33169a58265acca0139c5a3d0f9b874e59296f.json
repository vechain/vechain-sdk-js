"{\"value\":{\"code\":\"import { createPublicClient, http } from 'viem';\\nimport { mainnet } from 'viem/chains';\\n\\nconst publicClient = createPublicClient({\\n    chain: mainnet,\\n    transport: http()\\n});\",\"nodes\":[{\"type\":\"hover\",\"text\":\"(alias) function createPublicClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: PublicClientConfig<transport, chain, accountOrAddress, rpcSchema>): PublicClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":18,\"target\":\"createPublicClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":29,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 12000;\\n    contracts: {\\n        readonly ensUniversalResolver: {\\n            readonly address: \\\"0xeeeeeeee14d718c2b47d9923deab1335e144eeee\\\";\\n            readonly blockCreated: 23085558;\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 14353601;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\\nimport mainnet\",\"start\":58,\"length\":7,\"target\":\"mainnet\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 63 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":95,\"length\":12,\"target\":\"publicClient\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createPublicClient<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 12000;\\n    contracts: {\\n        readonly ensUniversalResolver: {\\n            readonly address: \\\"0xeeeeeeee14d718c2b47d9923deab1335e144eeee\\\";\\n            readonly blockCreated: 23085558;\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 14353601;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":110,\"length\":18,\"target\":\"createPublicClient\",\"line\":3,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 12000;\\n    contracts: {\\n        readonly ensUniversalResolver: {\\n            readonly address: \\\"0xeeeeeeee14d718c2b47d9923deab1335e144eeee\\\";\\n            readonly blockCreated: 23085558;\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 14353601;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":135,\"length\":5,\"target\":\"chain\",\"line\":4,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 12000;\\n    contracts: {\\n        readonly ensUniversalResolver: {\\n            readonly address: \\\"0xeeeeeeee14d718c2b47d9923deab1335e144eeee\\\";\\n            readonly blockCreated: 23085558;\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 14353601;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\\nimport mainnet\",\"start\":142,\"length\":7,\"target\":\"mainnet\",\"line\":4,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":155,\"length\":9,\"target\":\"transport\",\"line\":5,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":166,\"length\":4,\"target\":\"http\",\"line\":5,\"character\":15}],\"meta\":{\"extension\":\"ts\",\"compilerOptions\":{\"strict\":true,\"module\":99,\"target\":99,\"allowJs\":true,\"skipDefaultLibCheck\":true,\"skipLibCheck\":true,\"moduleDetection\":3,\"baseUrl\":\"/Users/andreas.frank/work/vechain-sdk-js/site/\"},\"handbookOptions\":{\"errors\":[],\"noErrors\":false,\"noErrorsCutted\":false,\"noErrorValidation\":false,\"noStaticSemanticInfo\":false,\"showEmit\":false,\"keepNotations\":false},\"removals\":[],\"flagNotations\":[],\"virtualFiles\":[{\"offset\":0,\"filename\":\"index.ts\",\"filepath\":\"/Users/andreas.frank/work/vechain-sdk-js/site/index.ts\",\"content\":\"import { createPublicClient, http } from 'viem';\\nimport { mainnet } from 'viem/chains';\\n\\nconst publicClient = createPublicClient({\\n    chain: mainnet,\\n    transport: http()\\n});\",\"extension\":\"ts\",\"supportLsp\":true}],\"positionQueries\":[],\"positionCompletions\":[],\"positionHighlights\":[]},\"queries\":[],\"completions\":[],\"errors\":[],\"highlights\":[],\"hovers\":[{\"type\":\"hover\",\"text\":\"(alias) function createPublicClient<transport extends Transport, chain extends Chain | undefined = undefined, accountOrAddress extends Account | Address | undefined = undefined, rpcSchema extends RpcSchema | undefined = undefined>(parameters: PublicClientConfig<transport, chain, accountOrAddress, rpcSchema>): PublicClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":9,\"length\":18,\"target\":\"createPublicClient\",\"line\":0,\"character\":9},{\"type\":\"hover\",\"text\":\"(alias) function http<rpcSchema extends RpcSchema | undefined = undefined, raw extends boolean = false>(url?: string | undefined, config?: HttpTransportConfig<rpcSchema, raw>): HttpTransport<rpcSchema, raw>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":29,\"length\":4,\"target\":\"http\",\"line\":0,\"character\":29},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 12000;\\n    contracts: {\\n        readonly ensUniversalResolver: {\\n            readonly address: \\\"0xeeeeeeee14d718c2b47d9923deab1335e144eeee\\\";\\n            readonly blockCreated: 23085558;\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 14353601;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\\nimport mainnet\",\"start\":58,\"length\":7,\"target\":\"mainnet\",\"line\":1,\"character\":9},{\"type\":\"hover\",\"text\":\"const publicClient: {\\n    account: undefined;\\n    batch?: {\\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined;\\n    } | undefined;\\n    cacheTime: number;\\n    ccipRead?: false | {\\n        request?: (parameters: CcipRequestParameters) => Promise<CcipRequestReturnType>;\\n    } | undefined;\\n    chain: {\\n        blockExplorers: {\\n            readonly default: {\\n                readonly name: \\\"Etherscan\\\";\\n                readonly url: \\\"https://etherscan.io\\\";\\n                readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n            };\\n        };\\n        ... 13 more ...;\\n        serializers?: ChainSerializers<...> | undefined;\\n    };\\n    ... 63 more ...;\\n    extend: <const client extends {\\n        ...;\\n    } & ExactPartial<...>>(fn: (client: Client<...>) => client) => Client<...>;\\n}\",\"start\":95,\"length\":12,\"target\":\"publicClient\",\"line\":3,\"character\":6},{\"type\":\"hover\",\"text\":\"(alias) createPublicClient<HttpTransport<undefined, false>, {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 12000;\\n    contracts: {\\n        readonly ensUniversalResolver: {\\n            readonly address: \\\"0xeeeeeeee14d718c2b47d9923deab1335e144eeee\\\";\\n            readonly blockCreated: 23085558;\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 14353601;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}, undefined, undefined>(parameters: {\\n    ...;\\n}): {\\n    ...;\\n}\\nimport createPublicClient\",\"docs\":\"Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\\n\\n- Docs: https://viem.sh/docs/clients/public\\n\\nA Public Client is an interface to \\\"public\\\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\",\"tags\":[[\"param\",\"config - {@link PublicClientConfig}\"],[\"returns\",\"A Public Client. {@link PublicClient}\"],[\"example\",\"import { createPublicClient, http } from 'viem'\\nimport { mainnet } from 'viem/chains'\\n\\nconst client = createPublicClient({\\n  chain: mainnet,\\n  transport: http(),\\n})\"]],\"start\":110,\"length\":18,\"target\":\"createPublicClient\",\"line\":3,\"character\":21},{\"type\":\"hover\",\"text\":\"(property) chain?: Chain | {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 12000;\\n    contracts: {\\n        readonly ensUniversalResolver: {\\n            readonly address: \\\"0xeeeeeeee14d718c2b47d9923deab1335e144eeee\\\";\\n            readonly blockCreated: 23085558;\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 14353601;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n} | undefined\",\"docs\":\"Chain for the client.\",\"start\":135,\"length\":5,\"target\":\"chain\",\"line\":4,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) const mainnet: {\\n    blockExplorers: {\\n        readonly default: {\\n            readonly name: \\\"Etherscan\\\";\\n            readonly url: \\\"https://etherscan.io\\\";\\n            readonly apiUrl: \\\"https://api.etherscan.io/api\\\";\\n        };\\n    };\\n    blockTime: 12000;\\n    contracts: {\\n        readonly ensUniversalResolver: {\\n            readonly address: \\\"0xeeeeeeee14d718c2b47d9923deab1335e144eeee\\\";\\n            readonly blockCreated: 23085558;\\n        };\\n        readonly multicall3: {\\n            readonly address: \\\"0xca11bde05977b3631167028862be2a173976ca11\\\";\\n            readonly blockCreated: 14353601;\\n        };\\n    };\\n    ... 11 more ...;\\n    serializers?: ChainSerializers<...> | undefined;\\n}\\nimport mainnet\",\"start\":142,\"length\":7,\"target\":\"mainnet\",\"line\":4,\"character\":11},{\"type\":\"hover\",\"text\":\"(property) transport: HttpTransport<undefined, false>\",\"docs\":\"The RPC transport\",\"start\":155,\"length\":9,\"target\":\"transport\",\"line\":5,\"character\":4},{\"type\":\"hover\",\"text\":\"(alias) http<undefined, false>(url?: string | undefined, config?: HttpTransportConfig<undefined, false> | undefined): HttpTransport<undefined, false>\\nimport http\",\"tags\":[[\"description\",\"Creates a HTTP transport that connects to a JSON-RPC API.\"]],\"start\":166,\"length\":4,\"target\":\"http\",\"line\":5,\"character\":15}],\"tags\":[]}}"
