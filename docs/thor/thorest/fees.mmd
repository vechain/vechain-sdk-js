---
title: thorest_thor_fees
---
classDiagram
    namespace thorest {
        class ThorRequest {
            <<interface>>
        }
    }
    namespace thorest_errors {
        class ThorError
    }
    class GetFeesHistoryResponse {
        Hex oldestBlock
        bigint[] baseFeePerGas
        number[] gasUsedRatio
        bigint[][] reward
        GetFeesHistoryResponseJSON toJSON()
    }
    class GetFeesPriorityResponse {
        bigint maxPriorityFeePerGas
        GetFeesPriorityResponseJSON toJSON()
    }
    class RetrieveHistoricalFeeData {
        ThorResponse~RetrieveHistoricalFeeData, GetFeesHistoryResponse>~ askTo(HttpClient httpClient)
        RetrieveHistoricalFeeData of
    }
    class SuggestPriorityFee {
        ThorResponse~SuggestPriorityFee, GetFeesPriorityResponse~ askTo(HttpClient httpClient)
        SuggestPriorityFee of(number: blockCount)$
        withNewestBlock(Hex|Revision revision)
        withRewardPercentiles(number[] rewardPercentiles)
    }
    ThorRequest <|.. RetrieveHistoricalFeeData
    ThorRequest <|.. SuggestPriorityFee
    RetrieveHistoricalFeeData "askTo" --> GetFeesHistoryResponse
    SuggestPriorityFee "askTo" --> GetFeesPriorityResponse
    ThorError <-- "throws" ThorRequest
