---
title: Transaction refactor
---
classDiagram
    class Clause {
        Address|null to
        bigint value
        Hex|null data
        Txt|null comment
        Hex|null abi
        Clause of(ClauseJSON: json)$
        ClauseJSON toJSON()
    }
    class Codec {
        <<interface>>
        T decode~T~(Uint8Array encoded)
        Uint8Array encode~T~(T bytes)
        T fromHex~T~(Hex hex)
        Hex toHex~T~(T obj)
    }
    class RLPCodec {
    }
    class Signer {
        <<interface>>
        Address address
        SignedTransactionRequest sign(TransactionRequest transactionRequest)
        DelegatedTransactionRequest sign(SignedTransactionRequest transactionRequest)
    }
    class SignedTransactionRequest {
        Address origin
        Uint8Array originSignature
        Uint8Array signature
    }
    class SponsoredTransactionRequest {
        Address gasPayer
        Uint8Array gasPayerSignature
    }
    class TransactionRequest {
        Hex blockRef
        number chainTag
        Clause[] clauses
        Hex|null dependsOn
        number expiration
        bigint gas
        bigint gasPriceCoef
        number nonce
        boolean isSponsored
        boolean isSigned()
    }
    RLPCodec --|> Codec
    Clause *-- "TransactionRequest.clauses" TransactionRequest
    TransactionRequest <|-- SignedTransactionRequest
    SignedTransactionRequest <|-- SponsoredTransactionRequest
    Signer <-- "1.in Signer.sign(...) " TransactionRequest
    Signer "1.out Signer.sign(...)" --> SignedTransactionRequest
    Signer <-- "2.in Signer.sign(...)" SignedTransactionRequest
    Signer "2.out Signer.sign(...)" --> SponsoredTransactionRequest
    TransactionRequest --> RLPCodec
    SignedTransactionRequest --> RLPCodec
    SponsoredTransactionRequest --> RLPCodec

